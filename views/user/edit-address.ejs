<%- include("../../views/partials/user/header") %>
<div class="container mt-4">
   <h3 class="mt-3" style="color: #046963; margin-bottom:70px">Edit User Address</h3>
   <form id="addressForm" action="/editAddress" class="border-0 p-3">
       <div class="row mb-50">
           <div class="form-group col-md-4">
               <label for="addressType">Address Type:</label>
               <input type="text" class="form-control border-3" value="<%= userAddress.addressType %>" id="addressType" name="addressType" required>
           </div>
           <div class="form-group col-md-4">
               <label for="name">Name:</label>
               <input type="text" class="form-control border-3" value="<%= userAddress.name %>" id="name" name="name" required>
           </div>
           <div class="form-group col-md-4">
               <label for="city">City:</label>
               <input type="text" class="form-control border-3" id="city" value="<%= userAddress.city %>" name="city" required>
           </div>
       </div>
       <div class="row mb-3">
           <div class="form-group col-md-4">
               <label for="landMark">Landmark:</label>
               <input type="text" class="form-control border-3" value="<%= userAddress.landMark%>" id="landMark" name="landMark" required>
           </div>
           <div class="form-group col-md-4">
               <label for="state">State:</label>
               <input type="text" class="form-control border-3" value="<%= userAddress.state %>" id="state" name="state" required>
           </div>
           <div class="form-group col-md-4">
               <label for="pincode">Pincode:</label>
               <input type="number" class="form-control border-3" value="<%= userAddress.pincode %>" id="pincode" name="pincode" required>
           </div>
       </div>
       <div class="row mb-3">
           <div class="form-group col-md-4">
               <label for="phone">Phone:</label>
               <input type="number" class="form-control border-3" id="phone" value="<%= userAddress.phone %>" name="phone" required>
           </div>
           <div class="form-group col-md-4">
               <label for="altPhone">Alternate Phone:</label>
               <input type="number" class="form-control border-3" id="altPhone" value="<%= userAddress.altPhone %>" name="altPhone" required>
           </div>
       </div>
       <div class="form-check">
        <input class="form-check-input" type="checkbox" id="isDefault" name="isDefault" <% if (userAddress.isDefault) { %> checked <% } %>>
        <label class="form-check-label pb-4" for="isDefault">
          Set this as the default address
        </label>
      </div>
       <button type="submit" id="submitButton" addressId="<%= userAddress._id %>" class="btn btn-primary">Submit</button>
   </form>
</div>


<script>

    document.getElementById('addressForm').addEventListener('submit', function (event) {
        event.preventDefault();

        if (validateForm()) {
            const formData = new FormData(this);
            const formDataObject = {};
            formData.forEach((value, key) => {
                formDataObject[key] = value;
            });
            formDataObject.isDefault = document.getElementById("isDefault").checked;
            const addressId = document.getElementById("submitButton").getAttribute("addressId");
            formDataObject.addressId = addressId;

            fetch(this.action, {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify(formDataObject)
            })
                .then(response => response.json())
                .then(data => {
                    if (data.status) {
                        Swal.fire({
                            title: 'Success',
                            text: data.message,
                            icon: 'success'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = data.redirectToUserProfile || data.redirectToCheckout;
                            }
                        });
                    } else {
                        Swal.fire({
                            title: 'Error',
                            text: data.message,
                            icon: 'error'
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }
    });



   function validateForm() {
       let isValid = true;
       const requiredFields = ["addressType", "name", "city", "landMark", "state", "pincode", "phone", "altPhone"];
       requiredFields.forEach(function (field) {
           const input = document.getElementById(field);
           if (input.value.trim() === "") {
               Swal.fire({
                   title: 'Error',
                   text: `Please fill all the field.`,
                   icon: 'error'
               });
               isValid = false;
           }

       });


       return isValid;
   };

//    const submitBtn = document.getElementById("submitButton");
//    submitBtn.addEventListener("click", () => {

//    })

</script>
<%- include("../../views/partials/user/footer") %>



